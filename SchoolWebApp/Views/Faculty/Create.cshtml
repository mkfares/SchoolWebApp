@model SchoolWebApp.ViewModels.FacultyViewModel

@{
    ViewBag.Title = "Create New Faculty";
}

<h2>Create New Faculty</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @*<div class="form-horizontal">*@
    <h4>Faculty</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <fieldset class="fieldset-border">
        <legend class="legend-border">Login Information</legend>
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "username@email.com" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    </fieldset>
    <fieldset class="fieldset-border">
        <legend class="legend-border">Personal Information</legend>
        <div class="row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

            </div>
        </div>
    </fieldset>

    <fieldset class="fieldset-border">
        <legend class="legend-border">Professional Information</legend>
        <div class="row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.Speciality, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Speciality, new { htmlAttributes = new { @class = "form-control", placeholder = "Faculty Speciality" } })
                @Html.ValidationMessageFor(model => model.Speciality, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label" })
                @Html.EnumDropDownListFor(model => model.Level, "Select Faculty Level", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.DepartmentId, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </fieldset>
    <div class="form-group">
        <div>
            <input type="submit" value="Create" class="btn btn-default pull-right" />
        </div>
    </div>
    @*</div>*@
}

<div>
    @Html.ActionLink("Back to Faculty List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
